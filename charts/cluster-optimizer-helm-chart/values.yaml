# Default values for cluster-optimizer-chart.

# Default values for optimize db
optimizedb:
  create: true
  # following parameters 'rootPassword', 'hostNetwork', 'host' and 'size' only apply for create = true
  rootPassword: optimizer
  hostNetwork: false
  host: ""              # specify the host where the optimizedb is running, host MUST be a kubernetes node name.
  #size: 2Gi           # should specify db size, default value is 2Gi
  conf: 
  #  dbHost: optimizer.mysql # valid when create is false
    schema: optconf
    port: "3306"
    user: root
    password: optimizer
    #maxOpenConns: 10 # should specify maxOpenConns, default value is 10
  data:
  #  dbHost: optimizer.mysql # valid when create is false
    schema: optdata
    port: "3306"
    user: root
    password: optimizer
    #maxOpenConns: 10 # should specify maxOpenConns, default value is 10 
  # user schema is requried for business version
  # user:
  #   schema: user
  #   port: "3306"
  #   user: root
  #   password: optimizer
  #   maxOpenConns: 10

# Default values for optimize deployment.
images:
  ui: 
    repository: wiseinf/optimizer-ui
    pullPolicy: IfNotPresent
    tag: "1.3.0"
  optimizer:
    repository: wiseinf/optimizer
    pullPolicy: IfNotPresent
    tag: "1.3.0"

# Specify extra command arguments.
commandArguments:
  - "--log-level=debug" 
#  - "--log-format=text" 
#  - "--log-enable-color=true"
#  - "--log-enable-console=false""

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. 
  # ui: {}
  optimizer: 
    requests:
      cpu: 100m
      memory: 200M
    limits:
      cpu: 1000m
      memory: 1G
  # mysql resource only take affect when optimizedb.create is true
  # mysql: {}

livenessProbe:
  ui:
    httpGet:
      path: /
      port: 80
  optimizer:
    httpGet:
      path: /healthz
      port: 7070
readinessProbe:
  ui:
    httpGet:
      path: /
      port: 80
  optimizer:
    httpGet:
      path: /healthz
      port: 7070

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: optimizer.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: cluster-optimzier-example-tls
  #    hosts:
  #      - cluster-optimzier-example.local

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# license for business version
# license:
#   certificate:  certificate data 
#   signature: signature data

# configure sms and email for security code and so on. Only avavaliable for business version
# sms:
#   enabled: true
#   provider: ""
#   ...
# email:
#   enabled: true
#   provider: ""
#   template: templates/email_code.tpl
#   ...

# configure optimize engine
# optimize:
#   defaultCron: "0 0 1 * * ?"
#   enabled: true